version: '3.8'

services:
  frontend:
    build:
      context: ./eventia-ticketing-flow1
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - VITE_API_BASE_URL=http://localhost:3000/api
    volumes:
      - ./eventia-ticketing-flow1:/app
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - eventia-network

  backend:
    build:
      context: ./eventia-backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=eventia123
      - DB_NAME=eventia
      - JWT_SECRET=your-secret-key
      - JWT_EXPIRES_IN=24h
      - CORS_ORIGIN=http://localhost:8080
    volumes:
      - ./eventia-backend:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - eventia-network

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=eventia123
      - POSTGRES_DB=eventia
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./eventia-backend/src/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - eventia-network

networks:
  eventia-network:
    driver: bridge

volumes:
  postgres_data: 